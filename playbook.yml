- name: Provisioning graylog nodes
  hosts: "graylog"
  become: true

  tasks:

  - name: Set timezone to Europe/Kyiv
    timezone:
      name: "{{ graylog_timezone }}"
    become: yes

  - name: "Install Java"
    apt:
      update_cache: yes
      cache_valid_time: 3600
      name: "openjdk-8-jre"
      state: "latest"

- name: Install MongoDB
  hosts: "graylog"
  become: true
  roles:
    - install_mongodb
#   vars:
#     mongodb_version: "{{ graylog_mongodb_version }}"
#     bind_ip: "0.0.0.0"
#     repl_set_name: "{{ graylog_database_replica_set }}"
#     authorization: "disabled"
#   roles:
#     - community.mongodb.mongodb_repository
#     - community.mongodb.mongodb_mongod
#   tasks: 

#   - name: Ensure that config file mongod.service is exists
#     template:
#       src: mongod.service.j2
#       dest: /lib/systemd/system/mongod.service
#     notify: daemon reload
  
#   handlers:
#     - name: daemon reload
#       systemd:
#         daemon_reload: true

# - name: Configure MongoDB master node 
#   hosts: "graylog01"
#   become: true
#   tasks:

#   - name: "Install pip"
#     apt:
#       update_cache: yes
#       cache_valid_time: 3600
#       name:
#       - "python3-pip"

#       state: "latest"

#   - name: "Install PyMongo"
#     pip:
#       name: "pymongo==4.2.0"
#       state: "present"

#   - name: Configure replicaset
#     community.mongodb.mongodb_replicaset:
#       login_host: "localhost"
#       login_user: "{{ graylog_database_admin_user }}"
#       login_password: "{{ graylog_database_admin_password }}"
#       replica_set: "{{ graylog_database_replica_set }}"
#       members:
#       - host: "{{ hostvars[groups['graylog'][0]]['ansible_host'] }}:{{ graylog_database_port }}"
#         priority: 1
#       - host: "{{ hostvars[groups['graylog'][1]]['ansible_host'] }}:{{ graylog_database_port }}"
#         priority: 0.5
#       - host: "{{ hostvars[groups['graylog'][2]]['ansible_host'] }}:{{ graylog_database_port }}"
#         priority: 0.5
#     register: mongo_replicaset
  
#   - block: #=================CONFIGURE MONGODB REPLICASET ================== 
#       - name: Create MongoDB admin user
#         community.mongodb.mongodb_user:
#           login_host: localhost
#           login_port: "{{ graylog_database_port }}"
#           name: "{{ graylog_database_admin_user }}"
#           password: "{{ graylog_database_admin_password }}"
#           roles:
#             - { db: "admin", role: "userAdminAnyDatabase" }
#             - { db: "admin", role: "dbAdminAnyDatabase" }
#             - { db: "admin", role: "readWriteAnyDatabase" }
#           state: present
#           replica_set: "{{ graylog_database_replica_set }}"
#           database: admin

#       - name: Create Graylog Database and Administrator of this database
#         community.mongodb.mongodb_user:
#           login_user: "{{ graylog_database_admin_user }}"
#           login_password: "{{ graylog_database_admin_password }}"
#           name: "{{ graylog_database_user }}"
#           password: "{{ graylog_database_password }}"
#           roles:
#             - { db: "{{ graylog_database }}", role: "readWrite" }
#             - { db: "{{ graylog_database }}", role: "dbAdmin" }
#           state: present
#           login_host: localhost
#           login_port: "{{ graylog_database_port }}"
#           database: "{{ graylog_database }}"
      
#       - name: Restart MongoDB on master node
#         service:
#           name: mongod
#           state: restarted
#         tags: restart-mongo

#       - name: Restart systemd
#         systemd:
#           daemon_reload: true
#     when: mongo_replicaset.changed
    
- name: Install OpenSearch | Install necessary Packges
  hosts: "opensearch"
  become: true
  tasks:

  - name: OpenSearch Install | Import PGP key
    apt_key:
      url: https://artifacts.opensearch.org/publickeys/opensearch.pgp
      state: present

  - name: OpenSearch Install | Add OpenSearch 2.x repository
    apt_repository:
      repo: "deb [arch=amd64] https://artifacts.opensearch.org/releases/bundle/opensearch/2.x/apt stable main"
      validate_certs: false
      state: present

  - name: OpenSearch Install | Install packages
    apt:
      update_cache: yes
      name: "opensearch={{ opensearch_version }}"
      state: present
    environment:
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: "{{ opensearch_password }}"

  - name: Set vm.max_map_count to 262144
    sysctl:
      name: vm.max_map_count
      value: 262144
      state: present
      sysctl_set: yes
  
  - name: Force systemd to reread configs 
    systemd:
      daemon_reload: true

  - name: Configuration for OpenSearch
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - {src: 'opensearch.j2', dest: '/etc/opensearch/opensearch.yml'}
      - {src: 'jvm.options.j2', dest: '/etc/opensearch/jvm.options'}
    notify: 
      - Restart Opensearch
    tags: config-opensearch
   
  
  - name: Make sure opensearch is started
    ansible.builtin.service:
      name: opensearch
      state: started
      enabled: true 

  handlers:
    - name: Restart Opensearch
      service:
        name: opensearch
        state: restarted

- name: Install Graylog repository
  hosts: graylog
  become: true
  tasks:

  - name: Download Graylog repository package
    get_url:
      url: "https://packages.graylog2.org/repo/packages/graylog-{{ graylog_version }}-repository_latest.deb"
      dest: "/tmp/graylog-{{ graylog_version }}-repository_latest.deb"

  - name: Install Graylog repository package
    apt:
      deb: "/tmp/graylog-{{ graylog_version }}-repository_latest.deb"
      state: present
      update_cache: yes
  
  - name: Install Graylog server
    apt:
      update_cache: yes
      name: graylog-server
      state: present
  
  - name: Set Graylog Config file
    template:
      src: "graylog_server.j2"
      dest: "/etc/graylog/server/server.conf"
    notify: Restart Graylog
  
  - name: Force systemd to reread configs 
    systemd:
      daemon_reload: true
  
  - name: Make sure Graylog is started
    service:
      name: graylog-server
      state: started
      enabled: true 

  - name: Ensure opensearch  is in a running state
    service:
      name: opensearch
      state: started
    register: opensearchDetails
    until: opensearchDetails.status.ActiveState == "active"
    retries: 15
    delay: 20
  
  handlers:
    - name: Restart Graylog
      service:
        name: graylog-server
        state: restarted
